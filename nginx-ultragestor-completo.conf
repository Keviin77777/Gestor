server {
    listen 80;
    listen 443 ssl http2;
    server_name ultragestor.site www.ultragestor.site;
    
    # SSL (gerenciado pelo aaPanel)
    ssl_certificate /www/server/panel/vhost/cert/ultragestor.site/fullchain.pem;
    ssl_certificate_key /www/server/panel/vhost/cert/ultragestor.site/privkey.pem;
    
    root /www/wwwroot/ultragestor.site/Gestor;
    index index.php index.html;
    
    # Logs
    access_log /www/wwwlogs/ultragestor.site.log;
    error_log /www/wwwlogs/ultragestor.site.error.log;
    
    # Tamanho máximo de upload
    client_max_body_size 50M;
    
    # API PHP - Arquivos .php diretos
    location ~ ^/api/.*\.php$ {
        fastcgi_pass unix:/tmp/php-cgi-81.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        fastcgi_param REQUEST_URI $request_uri;
        fastcgi_param DOCUMENT_URI $document_uri;
        include fastcgi_params;
        
        # CORS
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-CSRF-Token' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
    
    # API PHP - Rotas sem .php (via index.php)
    location /api {
        try_files $uri $uri/ /api/index.php?$query_string;
        
        location ~ \.php$ {
            fastcgi_pass unix:/tmp/php-cgi-81.sock;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            
            # CORS
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-CSRF-Token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
    }
    
    # Next.js - Frontend (porta 3000)
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }
    
    # Arquivos estáticos do Next.js
    location /_next/static {
        proxy_pass http://127.0.0.1:3000;
        proxy_cache_valid 200 60m;
        add_header Cache-Control "public, immutable";
    }
    
    # Bloquear acesso a arquivos ocultos
    location ~ /\. {
        deny all;
    }
}
